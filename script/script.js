// Ответы на вопросы Git. Homework_one

// 1) Вопрос: Как отказаться от изменений в файле (файлах) находящийся в рабочем каталоге (work directory)?
//    Ответ: 1.1) Отказаться от изменений в файлах. Отменить безвозвратно - git checkout .
//    Команда отменяет все изменения которые были внесены в файлы.
//    1.2) Отказаться от изменений в файле - git checkout file.txt. git checkout и название файла,  
//    без  точки.
//    Данная команда уберет изменения в конкретном файле, почистит его. 


// 2) Вопрос: Как вернуть файл из индекса в рабочий каталог?
//    Ответ: git restore --staged file.txt
//    Файл мы указываем, который мы не хотим коммитить. git restore --staged и название файла.
//    git reset file.txt также можно использовать и это сработает, но это более старая команда.  
//    Лучше использовать первую команду.


// 3) Вопрос: Как отменить ошибочный commit ?
//    Ответ: git reset HEAD~1 либо git reset HEAD^^^ 
//    HEAD~1 Это мы сдвинули коммит на один шаг назад. Код не удаляется, мы можем исправить ошибку и 
//    снова  закоммитить.


// 4) Вопрос: Как создать новую ветку и переключится в нее?
//    Ответ: git branch test
//    Команда git branch создает новую ветку, test - придуманное название.
//    git branch -v         проверяем, создалась ли ветка.
//    git checkout test     данная команда переключит нас на новую ветку.
//    git checkout -b test  Можно сразу создать ветку и в нее перейти.


// 5) Вопрос: В чем отличение между fast-forward merge and non fast-forfard merge?
//    Ответ: fast-forward merge and non fast-forfard merge - это два способа объединения изменений 
//    между двумя ветками.
//    Fast-forward merge - Это означает, что на ветке в которую происходит слияние не было новых 
//    коммитов. 
//    Non fast-forfard merge - На ветке, в которую происходит слияние, были новые коммиты. Этот способ
//    используются тогда, когда на обеих ветках были сделаны коммиты независимо друг от друга.


// 6) Вопрос: Когда может возникнуть конфликт слияния веток, как его разрешить?
//    Ответ: Как его разрешить: 6.1) Открыть через редактор файл с конфликтом. joe file.txt
//    6.2) Отредактировать файл, убрав маркеры и оставить только то, что необходимо.
//    6.3) Командой git add пометить файл как разрешенный конфликт. git add file.txt
//    6.4) Затем выполнить команду git commit чтобы завершить слияние, мердж.
//    Вопрос : Когда может возникнуть конфликт?
//    Ответ: В одном и том же файле разные строки были изменены в обеих ветках слияния, удален файл в 
//    одной ветке слияния, а в другой просто изменен. 


// 7) Вопрос: Можно ли удалить ветку? Как? 
//    Ответ: Да, можно. Команда для удаления ветки   git branch -d test